chrome.runtime.onInstalled.addListener(()=>{console.log("Elasticsearch Query Helper Extension installed")});chrome.action.onClicked.addListener(e=>{chrome.sidePanel.open({tabId:e.id})});chrome.runtime.onMessage.addListener((e,t,r)=>{switch(console.log("Background received message:",e),e.type){case"OPEN_SIDE_PANEL":chrome.sidePanel.open({tabId:e.tabId}),r({success:!0});break;case"CLOSE_SIDE_PANEL":chrome.sidePanel.close({tabId:e.tabId}),r({success:!0});break;case"GET_ACTIVE_TAB":return chrome.tabs.query({active:!0,currentWindow:!0},c=>{r({tab:c[0]})}),!0;case"ELASTICSEARCH_QUERY":return s(e.payload).then(c=>r({success:!0,data:c})).catch(c=>r({success:!1,error:c.message})),!0;case"QUERY_FEEDBACK":return n(e.payload).then(()=>r({success:!0})).catch(c=>r({success:!1,error:c.message})),!0;default:console.warn("Unknown message type:",e.type),r({success:!1,error:"Unknown message type"})}});chrome.tabs.onUpdated.addListener((e,t,r)=>{t.status==="complete"&&console.log("Tab updated:",r.url)});async function s(e){try{const{query:t,clusterConfig:r,options:c}=e;return console.log("Executing Elasticsearch query:",t),console.log("Cluster config:",r),console.log("Options:",c),await new Promise(o=>setTimeout(o,1e3)),{query:t,results:{hits:{total:{value:42},hits:[{_id:"1",_source:{title:"Sample document 1"}},{_id:"2",_source:{title:"Sample document 2"}}]}},executionTime:"125ms"}}catch(t){throw console.error("Error executing Elasticsearch query:",t),t}}async function n(e){try{const{queryId:t,feedback:r,comment:c}=e,o={queryId:t,feedback:r,comment:c,timestamp:Date.now()},a=(await chrome.storage.local.get(["queryFeedback"])).queryFeedback||[];a.push(o),await chrome.storage.local.set({queryFeedback:a}),console.log("Query feedback stored:",o)}catch(t){throw console.error("Error storing query feedback:",t),t}}chrome.sidePanel.setPanelBehavior({openPanelOnActionClick:!0}).catch(e=>console.error("Error setting panel behavior:",e));
